## begin firewall rules ##
# we will be opening TCP/9200 for ES
# if es_listen_external: true is set
# this is needed for elastic connector in browbeat
# determine firewall status and take action
# 1) use firewall-cmd if firewalld is utilized
# 2) insert iptables rule if iptables is used

- debug:
    msg: "port {{ kibana_server_port }} "

# Firewalld
- name: Determine if firewalld is in use
  shell: systemctl is-enabled firewalld.service | egrep -qv 'masked|disabled'
  ignore_errors: true
  register: firewalld_in_use
  no_log: true
  when: kibana_listen_external

- name: Determine if firewalld is active
  shell: systemctl is-active firewalld.service | grep -vq inactive
  ignore_errors: true
  register: firewalld_is_active
  no_log: true
  when: kibana_listen_external

- name: Determine if TCP/{{es_local_port}} is already active
  shell: firewall-cmd --list-ports | egrep -q "{{kibana_server_port}}/tcp"
  #ignore_errors: truu
  register: firewalld_es_local_port_exists
  failed_when: ( (firewalld_es_local_port_exists.rc != 0 ) and ( firewalld_es_local_port_exists.rc != 1 ) )
  #no_log: true
  when: kibana_listen_external

# add firewall rule via firewall-cmd
- name: Add firewall rule for TCP/{{kibana_server_port}} (firewalld)
  command: "{{ firewall_item }}"
  with_items:
    - firewall-cmd --zone=public --add-port={{kibana_server_port}}/tcp --permanent
    - firewall-cmd --reload
  loop_control:
    loop_var: firewall_item
  ignore_errors: true
  become: true
  when: kibana_listen_external and firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_es_local_port_exists.rc != 0

# iptables-services
- name: check firewall rules for TCP/{{kibana_server_port}} (iptables-services)
  shell: grep "dport {{kibana_server_port}} \-j ACCEPT" /etc/sysconfig/iptables | wc -l
  ignore_errors: true
  register: iptables_es_local_port_exists
  failed_when: iptables_es_local_port_exists == 127
  no_log: true
  when: kibana_listen_external

- name: Add firewall rule for TCP/{{kibana_server_port}} (iptables-services)
  lineinfile:
    dest: /etc/sysconfig/iptables
    line: '-A INPUT -p tcp -m tcp --dport {{kibana_server_port}} -j ACCEPT'
    regexp: '^INPUT -i lo -j ACCEPT'
    insertbefore: '-A INPUT -i lo -j ACCEPT'
    backup: yes
  when: kibana_listen_external and firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_es_local_port_exists.stdout|int == 0
  register: iptables_needs_restart

- name: Restart iptables-services for TCP/{{kibana_server_port}} (iptables-services)
  shell: systemctl restart iptables.service
  ignore_errors: true
  when: kibana_listen_external and iptables_needs_restart != 0 and firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0
  tags:
    # Skip ANSIBLE0013 Use shell only when shell functionality is required
    # No systemctl module available in current stable release (Ansible 2.1)
    - skip_ansible_lint

## end firewall rules ##
